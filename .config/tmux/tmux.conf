# 'tmux list-keys' to list all key bindings

# unbinds whatever functionality C-space had (if any).
unbind C-Space
# informs tmux that the prefix will now be C-Space
set -g prefix C-Space
# allows Ctrl + Space to perform the send-prefix command
bind C-Space send-prefix

# reload the config file
unbind r
bind r source-file "$HOME/.config/tmux/tmux.conf"

# To enable scrolling, clicking, and resizing
set -g mouse on
# start with window 1 (instead of 0)
set -g base-index 1
# start with pane 1 (instead of 0)
setw -g pane-base-index 1
# renumber windows after closing
set -g renumber-windows on
# start with pane 1
set -g pane-base-index 1
# remove esc delay
set -sg escape-time 0
# history
set -g history-limit 10000
# true colors
set-option -sa terminal-features ',xterm-256color:RGB'

# vim syle for panel movement
bind-key y select-pane -L
bind-key u select-pane -D
bind-key i select-pane -U
bind-key o select-pane -R

# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (prefix).
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# zoom panel with + or =
unbind-key z
bind-key "+" resize-pane -Z
bind-key "=" resize-pane -Z

# kill panel without askig confirmation
bind-key "x" kill-window

# set default window directory to the current directory of the pane
# evrey new window will start from this path
bind-key "a" attach -c "#{pane_current_path}"

# i find that having to press the Shift key to do Prefix + | is mildly inconvenient.
# So I have these mapping that allows me to press either the uppercased version
# of that key to get the vertical / horizontal splits
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"

bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"

# move windows
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# vim style for window movement
unbind-key p
bind-key h previous-window
unbind-key n
bind-key l next-window

# switch between sessions
# next
bind-key 'b' switch-client -n
# previous
bind-key 'm' switch-client -p
# create new session
bind-key 'n' new-session


## Use vim keybindings in copy mode
# 1.to enter in copy mode press <prefix> and [
# 2.navigate with vim keybindings
# 3.press v to start coping
# 4.press y to copy (must be installed xclip)
# 5.press <prefix> and P to paste in tmux
set-window-option -g mode-keys vi
set -g status-keys vi
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel

# split sytle
# maintained original color but more bold
set -g pane-active-border-style "bg=green,fg=green"
set -g pane-border-style "bg=white,fg=white"

# status line
set -g status-justify left
set -g status-style "bg=green,fg=black"
set -g status-interval 5

# window status
set-option -g status-position bottom
setw -g window-status-current-format "#[bg=yellow,fg=black,noreverse]▓░ [#I]:#W ░▓"
setw -g window-status-format "#[bg=green,fg=black,noreverse]▓░ #I:#W ░▓"

# show session name, window & pane number, date and time on left side of
# status bar
set -g status-left-length 100
set -g status-left "#[fg=black]#{?client_prefix,#[bg=magenta]#[fg=white],#[fg=black]}[#S] #[fg=black] "

# show default node version, battery status, wifi name & date time
DELIMITER='|'
status_prefix="#{?client_prefix,#[fg=white]#[bg=magenta]#(echo $(tmux show-option -gqv prefix | tr \"[:lower:]\" \"[:upper:]\" | sed 's/C-/\^/')) #[fg=default]#[bg=default]"$DELIMITER",}"
status_weather="#($XDG_CONFIG_HOME/tmux/scripts/tmux-weather)$DELIMITER"
status_packages="#(updatable-pkg -i)$DELIMITER"
status_battery="#($XDG_CONFIG_HOME/tmux/scripts/tmux-battery)"
status_wifi="#($XDG_CONFIG_HOME/tmux/scripts/tmux-wifi)$DELIMITER"
# for some reason that extra space at the end prevents the date from overlaping & makes it play nice with Nerd Fonts
status_date_time="%d %b %Y (%a) %H:%M "

set -g status-right-length 300
set -g status-right "${status_prefix}${status_weather}${status_packages}${status_battery}${status_wifi}${status_date_time}"

# drag-and-drop with dragon
bind -n DoubleClick1Pane run-shell "dragon -x '#{pane_current_path}/#{mouse_word}'"*

# search for prompt
# each of my prompt line has this special char «
bind-key p copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "«"
