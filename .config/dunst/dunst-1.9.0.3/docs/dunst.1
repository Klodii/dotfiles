.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "dunst 1"
.TH dunst 1 "2022-09-13" "v1.9.0-3-g1ef38e5" "Dunst Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dunst \- A customizable and lightweight notification\-daemon
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
dunst [\-conf file] [\-verbosity v] [\-print] [\-\-startup\-notification]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Dunst is a highly configurable and lightweight notification daemon.
.SS "Autostarting dunst"
.IX Subsection "Autostarting dunst"
On most installations dunst should be able to automatically be started by D\-Bus
when a notification is sent. This is not recommended when multiple notification
deamons are installed, because D\-Bus will not know which one to start.
Other ways of autostarting dunst include starting dunst with your desktop
environment or window manager's autostart functionality or via the provided
systemd service.
.SH "COMMAND LINE OPTIONS"
.IX Header "COMMAND LINE OPTIONS"
.IP "\fB\-h/\-\-help\fR" 4
.IX Item "-h/--help"
List all command line flags
.IP "\fB\-conf/\-config file\fR" 4
.IX Item "-conf/-config file"
Use alternative config file.
This disables the search for other config files.
If it cannot be opened Dunst will issue a warning and fall back on its internal
defaults.
(Hint: `dunst \-conf \- </dev/null` can be used to enforce the defaults, i.e. for
testing)
.IP "\fB\-v/\-\-version\fR" 4
.IX Item "-v/--version"
Print version information.
.IP "\fB\-verbosity\fR (values: 'crit', 'warn', 'mesg', 'info', 'debug' default 'mesg')" 4
.IX Item "-verbosity (values: 'crit', 'warn', 'mesg', 'info', 'debug' default 'mesg')"
Do not display log messages, which have lower precedence than specified
verbosity. This won't affect printing notifications on the terminal. Use
the '\-print' option for this.
.IP "\fB\-print\fR" 4
.IX Item "-print"
Print notifications to stdout. This might be useful for logging, setting up
rules or using the output in other scripts.
.IP "\fB\-\-startup_notification\fR (values: [true/false], default: false)" 4
.IX Item "--startup_notification (values: [true/false], default: false)"
Display a notification on startup.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
A default configuration file is included (usually /usr/local/etc/xdg/dunst/dunstrc)
and serves as the least important configuration file. Note: this was previously
/usr/share/dunst/dunstrc. You can edit this file to change the system-wide
defaults or copy it to a more important location to override its settings. See
the \s-1FILES\s0 section for more details on where dunst searches for its
configuration files and how settings get applied.
.PP
See \fBdunst\fR\|(5) for all possible settings.
.SS "NOTIFY-SEND"
.IX Subsection "NOTIFY-SEND"
dunst is able to get different colors for a message via notify-send.
In order to do that you have to add a hint via the \-h option.
The progress value can be set with a hint, too.
.IP "notify-send \-h string:fgcolor:#ff4444" 4
.IX Item "notify-send -h string:fgcolor:#ff4444"
.PD 0
.IP "notify-send \-h string:bgcolor:#4444ff \-h string:fgcolor:#ff4444 \-h string:frcolor:#44ff44" 4
.IX Item "notify-send -h string:bgcolor:#4444ff -h string:fgcolor:#ff4444 -h string:frcolor:#44ff44"
.ie n .IP "notify-send \-h int:value:42 ""Working ...""" 4
.el .IP "notify-send \-h int:value:42 ``Working ...''" 4
.IX Item "notify-send -h int:value:42 Working ..."
.PD
.SH "MISCELLANEOUS"
.IX Header "MISCELLANEOUS"
Dunst can be paused via the `dunstctl set-paused true` command. To unpause dunst use
`dunstctl set-paused false`.
Another way is to send \s-1SIGUSR1\s0 and \s-1SIGUSR2\s0 to pause and unpause
respectively. Pausing using dunstctl is recommended over using signals, because
the meaning of the signals is not be stable and might change in the future.
.PP
When paused dunst will not display any notifications but keep all notifications
in a queue.  This can for example be wrapped around a screen locker (i3lock,
slock) to prevent flickering of notifications through the lock and to read all
missed notifications after returning to the computer.
.SH "FILES"
.IX Header "FILES"
These are the base directories dunst searches for configuration files in
\&\fIdescending order of imortance\fR:
.ie n .IP "$XDG_CONFIG_HOME" 8
.el .IP "\f(CW$XDG_CONFIG_HOME\fR" 8
.IX Item "$XDG_CONFIG_HOME"
This is the most important directory. (\f(CW\*(C`$HOME/.config\*(C'\fR if unset or empty)
.ie n .IP "$XDG_CONFIG_DIRS" 8
.el .IP "\f(CW$XDG_CONFIG_DIRS\fR" 8
.IX Item "$XDG_CONFIG_DIRS"
This, like \f(CW$PATH\fR for instance, is a :\-separated list of base directories
in \fIdescending order of importance\fR.
(\fI/usr/local/etc/xdg\fR if unset or empty)
.PP
Dunst will search these directories for the following relative file paths:
.IP "\fIdunst/dunstrc\fR" 8
.IX Item "dunst/dunstrc"
This is the base config and as such the least important in a particular base
directory.
.IP "\fIdunst/dunstrc.d/*.conf\fR" 8
.IX Item "dunst/dunstrc.d/*.conf"
These are \*(L"drop-ins\*(R" (mind the \*(L".d\*(R" suffix of the directory).
They are more important than the base dunstrc in the parent directory, as they
are considered to be small snippets to override settings.
The last in lexical order is the most important one, so you can easily change
the order by renaming them.
A common approach to naming drop-ins is to prefix them with numbers, i.e.:
.Sp
.Vb 4
\&    00\-least\-important.conf
\&    01\-foo.conf
\&    20\-bar.conf
\&    99\-most\-important.conf
.Ve
.Sp
Only files with the \fB.conf\fR suffix will be read.
.PP
Only settings from the last base config the corresponding drop-ins get applied.
So if a dunstrc is first found in \fI~/.config/dunst/dunstrc\fR, drop-ins will be
searched in \fI~/.config/dunst/dunstrc.d/*\fR. Settings in more important files
override those in less important ones.
.SH "AUTHORS"
.IX Header "AUTHORS"
Written by Sascha Kruse <knopwob@googlemail.com>
.SH "REPORTING BUGS"
.IX Header "REPORTING BUGS"
Bugs and suggestions should be reported on GitHub at https://github.com/dunst\-project/dunst/issues
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2013 Sascha Kruse and contributors (see \s-1LICENSE\s0 for licensing information)
.PP
If you feel that copyrights are violated, please send me an email.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdunst\fR\|(5), \fBdunstctl\fR\|(1), \fBdmenu\fR\|(1), \fBnotify\-send\fR\|(1)
